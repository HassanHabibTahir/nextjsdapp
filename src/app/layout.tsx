"use client";
import "./globals.css";
import {
  EthereumClient,
  w3mConnectors,
  w3mProvider,
} from "@web3modal/ethereum";
import { Web3Modal } from "@web3modal/react";
import { configureChains, createConfig, WagmiConfig } from "wagmi";

import { Inter } from "next/font/google";
// import { ConectivityProvider } from "./utiles";

import { ConnectKitProvider, getDefaultConfig } from "connectkit";
import { bscTestnet, goerli } from "wagmi/chains";
import { createPublicClient, http } from "viem";
import { useEffect, useState } from "react";
const inter = Inter({ subsets: ["latin"] });

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  // const config = createConfig(
  //   getDefaultConfig({
  //     appName: "ConnectKit Next.js demo",

  //     chains: [bscTestnet],
  //     walletConnectProjectId: process.env.NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID!,
  //   })
  // );
  const projectId = "b7b1c701ab1d27d1dcafe5c14397c8b5";
  const chains = [bscTestnet];

  const { publicClient } = configureChains(chains, [
    w3mProvider({ projectId }),
  ]);

  const wagmiConfig = createConfig({
    autoConnect: true,
    connectors: w3mConnectors({ version: 1, chains, projectId }),
    publicClient,
  });
  const ethereumClient = new EthereumClient(wagmiConfig, chains);
  // const wagmiConfig = createConfig({
  //   autoConnect: true,
  //   // @ts-ignore
  //   ethereum: {
  //     appName: "web3modal",
  //     chains: [bscTestnet],
  //   },
  //   // providers: [b7b1c701ab1d27d1dcafe5c14397c8b5],
  // });
  const [ready, setReady] = useState(false);

  useEffect(() => {
    setReady(true);
  }, []);
  return (
    <html lang="en">
      <body className={inter.className}>
        {/* <WagmiConfig config={wagmiConfig}> */}
        {/* <ConnectKitProvider theme="auto"> */}
        {/* <ConectivityProvider> */}
        {/* {children} */}
        {/* </ConectivityProvider> */}
        {/* </ConnectKitProvider> */}
        {ready ? (
          <WagmiConfig config={wagmiConfig}>{children}</WagmiConfig>
        ) : null}
        {/* </WagmiConfig> */}
        <Web3Modal projectId={projectId} ethereumClient={ethereumClient} />
      </body>
    </html>
  );
}
